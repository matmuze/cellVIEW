uniform	float _Scale;
uniform	int _NumLipidInstances;
uniform	int _NumProteinInstances;
uniform int _EnableCrossSection;
uniform float4 _CrossSectionPlane;

uniform	int _NumInstances;
uniform	StructuredBuffer<float4> _InstancePositions;
uniform	RWStructuredBuffer<float4> _InstanceCullFlags;

bool SpherePlaneTest( float4 plane, float3 center, float offset)
{
	return dot(plane.xyz, center - plane.xyz * -plane.w) + offset > 0;
}

#pragma kernel CrossSection

[numthreads(8,1,1)]
void CrossSection (uint3 id : SV_DispatchThreadID)
{	
	if(id.x >= (uint)_NumInstances) return;			
	
	float3 center = _InstancePositions[id.x].xyz * _Scale;	
	bool cullInstance = _EnableCrossSection && SpherePlaneTest(_CrossSectionPlane, center, 0);
	
	_InstanceCullFlags[id.x].x = cullInstance ? 1 : 0;	
}

