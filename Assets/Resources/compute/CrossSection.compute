uniform	float _Scale;
uniform	int _NumLipidInstances;
uniform	int _NumProteinInstances;
uniform int _EnableCrossSection;
uniform float4 _CrossSectionPlane;

uniform	int _NumInstances;
uniform	StructuredBuffer<float4> _InstancePositions;
uniform	RWStructuredBuffer<int4> _InstanceCullFlags;

bool SpherePlaneTest( float4 plane, float3 center, float offset)
{
	return dot(plane.xyz, center - plane.xyz * -plane.w) + offset > 0;
}

#pragma kernel CrossSection

[numthreads(32,1,1)]
void CrossSection (uint3 id : SV_DispatchThreadID)
{	
	if(id.x >= (uint)_NumInstances) return;			
	
	float4 sphere = _InstancePositions[id.x]  * _Scale;
	bool cullInstance = SpherePlaneTest(_CrossSectionPlane, sphere.xyz, sphere.w);
	
	_InstanceCullFlags[id.x].x = cullInstance || _EnableCrossSection == 0 ? 0 : 1;	
	//_InstanceCullFlags[id.x].x = 0;	
}

